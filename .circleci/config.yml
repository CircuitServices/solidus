version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.3

executors:
  base:
    parameters: &parameters
      ruby:
        type: string
        default: "2.7"
    working_directory: &workdir ~/solidus
    environment: &environment
      DEFAULT_MAX_WAIT_TIME: 10
      SOLIDUS_RAISE_DEPRECATIONS: true
      CIRCLE_TEST_REPORTS: /tmp/test-results
      CIRCLE_ARTIFACTS: /tmp/test-artifacts
      BUNDLE_WITHOUT: "utils"
    docker:
      - image: &image cimg/ruby:<< parameters.ruby >>-browsers

  postgres:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: postgresql
      DB_HOST: localhost
    docker:
      - image: *image
      - image: jhawthorn/circleci-postgres-fast
        environment:
          POSTGRES_USER: root

  mysql:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: mysql
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
    docker:
      - image: *image
      - image: cimg/mysql:5.7

  sqlite:
    parameters: *parameters
    working_directory: *workdir
    environment:
      <<: *environment
      DB: sqlite
    docker:
      - image: *image

commands:
  setup:
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: |
          gem install bundler -v"~> 2.1" --conservative
          bundle lock
      - restore_cache:
          keys:
            - solidus-gems-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - solidus-gems-v3-{{ .Branch }}
            - solidus-gems-v3-master
            - solidus-gems-v3

      - run: |
          bundle config set path 'vendor/bundle'
          bundle check || bundle install
          bundle clean

      - save_cache:
          key: solidus-gems-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  test:
    steps:
      - run:
          name: Run Tests
          command: ./bin/build-ci test

      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

# TODO: Integrate with `setup` when we deprecate support for Rails 6.1 (vips is the default from Rails 7)
  libvips:
    steps:
      - run:
          name: Install libvips
          command: sudo apt-get install -y libvips

  install_solidus:
    parameters:
      flags:
        type: string
        default: "# no options"
        description: "flags to be passed to `bin/rails g solidus:install"
    steps:
      - run:
          name: "Cleanup & check rails version"
          command: |
            gem environment path
            rm -rf /tmp/my_app /tmp/.tool-versions # cleanup previous runs

            ruby -v >> /tmp/.tool-versions
            gem search -eq rails >> /tmp/.tool-versions # get the latest rails from rubygems
            gem search -eq solidus >> /tmp/.tool-versions # get the latest solidus from rubygems

            cat /tmp/.tool-versions
      - restore_cache:
          keys:
            - solidus-installer-v5-{{ checksum "/tmp/.tool-versions" }}
            - solidus-installer-v5-
      - run:
          name: "Prepare the rails application"
          command: |
            cd /tmp
            test -d my_app || gem install rails solidus
            test -d my_app || rails new my_app --skip-javascript --skip-git
      - save_cache:
          key: solidus-installer-v5-{{ checksum "/tmp/.tool-versions" }}
          paths:
            - /tmp/my_app
            - /home/circleci/.rubygems
      - run:
          name: "Run `solidus:install` with `<<parameters.flags>>`"
          command: |
            cd /tmp/my_app
            bundle add solidus --git "file://$(ruby -e"puts File.expand_path ENV['CIRCLE_WORKING_DIRECTORY']")"
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails generate solidus:install --auto-accept <<parameters.flags>>

  test_page:
    parameters:
      app_root:
        type: string
        default: '/tmp/my_app'
      path:
        type: string
        default: '/'
      expected_text:
        type: string

    steps:
      - run:
          name: "Check the contents of the <<parameters.path>> page"
          command: |
            cd <<parameters.app_root>>
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails server -p 3000 &
            wget --quiet --output-document - --tries=30 --retry-connrefused "http://localhost:3000<<parameters.path>>" | grep "<<parameters.expected_text>>"
            echo "Exited with $?"
            kill $(cat "tmp/pids/server.pid")

jobs:
  solidus_installer:
    executor: sqlite
    steps:
      - checkout
      - run:
          name: "apt-get update, for libvips"
          command: "sudo apt-get update"
      - libvips

      - install_solidus: { flags: "--sample=false --frontend=none --with-authentication=false" }
      - test_page: { expected_text: "<title>Ruby on Rails" }

      - install_solidus: { flags: "--sample=false --frontend=solidus_frontend --with-authentication" }
      - test_page: { expected_text: "data-hook=" }

      - install_solidus: { flags: "--sample=false --frontend=solidus_starter_frontend --with-authentication" }
      - test_page: { expected_text: "The only eCommerce platform youâ€™ll ever need." }

      - run:
          name: "Test `rake task: extensions:test_app`"
          command: |
            mkdir -p /tmp/dummy_extension
            cd /tmp/dummy_extension
            bundle init
            bundle add rails sqlite3 --skip-install
            bundle add solidus --git "file://$(ruby -e"puts File.expand_path ENV['CIRCLE_WORKING_DIRECTORY']")"
            export LIB_NAME=set # dummy requireable file
            bundle exec rake -rrails -rspree/testing_support/extension_rake -e'Rake::Task["extension:test_app"].invoke'

workflows:
  build:
    jobs:
      - solidus_installer
